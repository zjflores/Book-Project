{"version":3,"sources":["NavBar.js","Home.js","AddBook.js","TrashButton.js","Book.js","BookList.js","BookInfo.js","Login.js","Register.js","User.js","UserList.js","UserBooks.js","BookForms.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoggedIn","handleLogout","bind","assertThisInitialized","event","_this2","preventDefault","fetch","method","mode","credentials","headers","Content-Type","then","response","json","data","console","log","onLogout","catch","error","react_default","a","createElement","Container","Row","Col","lg","Navbar","Nav","className","NavItem","lib","to","Button","onClick","react_router","push","Component","Home","getQuote","setState","quote","Jumbotron","src_NavBar_0","AddBook","title","author","bookId","handleTitleChange","handleAuthorChange","handleSubmit","target","value","body","JSON","stringify","id","onBookAdd","Form","onSubmit","Group","controlId","Control","type","onChange","placeholder","block","TrashButton","handleDeleteBook","onBookDelete","Book","updateClicked","saveClicked","newTitle","newAuthor","handleUpdateBook","handleSaveUpdate","handleCancel","onBookUpdate","Label","sm","sme","class","src_TrashButton","react_router_dom","concat","userId","BookList","books","getUserId","getBooks","updatedBooks","filter","book","newBooks","oldBookId","newBookId","_this3","_this4","map","src_Book_0","key","src_AddBook","React","BookInfo","name","genres","startDate","endDate","authorized","readers","getAuthorization","getTitle","getName","getBookGenres","getStartDate","getEndDate","getReaders","match","params","status","_this5","_this6","book_id","moment","format","_this7","_this8","_this9","genre","reader","sz","Login","email","password","handleEmailChange","handlePasswordChange","onLogin","required","size","Register","fname","lname","handleFnameChange","handleLnameChange","User","users","UserList","getUsers","user","src_User","UserBooks","BookForms","selectedGenres","getGenres","handleSelect","handleDeselect","handleStartDateChange","handleEndDateChange","handleSubmitGenres","handleSubmitStartDate","handleSubmitEndDate","addGenres","newSelectedGenres","deselectedGenres","genresSelected","i","length","text","start","end","availableGenres","es","buttonText","showFilter","options","selectedOptions","App","renderLogin","renderRegister","renderHome","src_Login","src_Register","src_Home","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f83403a2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Container,\n  Row,\n  Col,\n  Nav,\n  Navbar,\n  NavItem,\n  Button,\n} from 'react-bootstrap'\nimport { Redirect } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport './NavBar.css'\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoggedIn: this.props.isLoggedIn,\n    }\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n  handleLogout(event) {\n    event.preventDefault()\n    fetch('/logout', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.props.onLogout()\n      })\n      .catch(error => console.error(error))\n  }\n  render() {\n    if (this.props.isLoggedIn) {\n      return (\n        <Container>\n          <Row>\n            <Col lg={10}>\n              <Navbar>\n                <Nav className=\"mynav\">\n                  <NavItem>\n                    <LinkContainer to=\"/\">\n                      <span className=\"navlink\">Home</span>\n                    </LinkContainer>\n                  </NavItem>\n                  <NavItem>\n                    <LinkContainer to=\"/books\">\n                      <span className=\"navlink\">Your Library</span>\n                    </LinkContainer>\n                  </NavItem>\n                  <NavItem>\n                    <LinkContainer to=\"/users\">\n                      <span className=\"navlink\">Users</span>\n                    </LinkContainer>\n                  </NavItem>\n                </Nav>\n              </Navbar>\n            </Col>\n            <Col>\n              <Navbar lg={2} className=\"logoutPosition\">\n                <Button className=\"logoutBtn\" onClick={this.handleLogout}>\n                  Logout\n                </Button>\n              </Navbar>\n            </Col>\n          </Row>\n        </Container>\n      )\n    } else {\n      return (\n        <Container>\n          <Redirect push to=\"/\" />\n          <Navbar>\n            <Nav className=\"mynav\">\n              <NavItem>\n                <LinkContainer to=\"/\">\n                  <span className=\"navlink\">Home</span>\n                </LinkContainer>\n              </NavItem>\n              <NavItem>\n                <LinkContainer to=\"/register\">\n                  <span className=\"navlink\">Register</span>\n                </LinkContainer>\n              </NavItem>\n              <NavItem>\n                <LinkContainer to=\"/login\">\n                  <span className=\"navlink\">Login</span>\n                </LinkContainer>\n              </NavItem>\n            </Nav>\n          </Navbar>\n        </Container>\n      )\n    }\n  }\n}\n\nexport default NavBar\n","import React, { Component } from 'react'\nimport NavBar from './NavBar'\nimport './Base.css'\nimport { Jumbotron } from 'react-bootstrap'\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { quote: '' }\n  }\n\n  getQuote = () => {\n    fetch('/quotes')\n      .then(response => response.json())\n      .then(data => this.setState({ quote: data.quote }))\n  }\n\n  componentDidMount() {\n    this.getQuote()\n  }\n\n  render() {\n    return (\n      <div className=\"imgBackground\">\n        <Jumbotron className=\"Home container-fluid\" />\n        <header>\n          <div className=\"header\">\n            <NavBar\n              isLoggedIn={this.props.isLoggedIn}\n              onLogout={this.props.onLogout}\n            />\n            <div className=\"Cover\">\n              <h1 className=\"Title\">Build Your Own Book Club</h1>\n              <p className=\"quote\">{this.state.quote}</p>\n            </div>\n          </div>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport { Container, Form, Button } from 'react-bootstrap'\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: '',\n      author: '',\n      bookId: '',\n    }\n    this.handleTitleChange = this.handleTitleChange.bind(this)\n    this.handleAuthorChange = this.handleAuthorChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleTitleChange(event) {\n    this.setState({ title: event.target.value })\n  }\n\n  handleAuthorChange(event) {\n    this.setState({ author: event.target.value })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    fetch('/add-book', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        title: this.state.title,\n        author: this.state.author,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ bookId: data.id })\n        this.props.onBookAdd(\n          this.state.title,\n          this.state.author,\n          this.state.bookId\n        )\n        this.setState({ author: '' })\n        this.setState({ title: '' })\n      })\n      .catch(error => console.error(error))\n  }\n\n  render() {\n    return (\n      <Container>\n        <h2>Add a book!</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group className=\"titleForm\" controlId=\"Title\">\n            <Form.Control\n              type=\"text\"\n              value={this.state.title}\n              onChange={this.handleTitleChange}\n              placeholder=\"Title\"\n            />\n          </Form.Group>\n          <Form.Group className=\"authorForm\" controlId=\"Author\">\n            <Form.Control\n              type=\"text\"\n              value={this.state.author}\n              onChange={this.handleAuthorChange}\n              placeholder=\"Author\"\n            />\n          </Form.Group>\n          <Button className=\"btn\" type=\"submit\" block>\n            Submit\n          </Button>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nexport default AddBook\n","import React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\n\nclass TrashButton extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.handleDeleteBook = this.handleDeleteBook.bind(this)\n  }\n\n  handleDeleteBook(event) {\n    event.preventDefault()\n    fetch('/delete-book', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.bookId,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.props.onBookDelete(this.props.bookId)\n      })\n      .catch(error => console.error(error))\n  }\n\n  render() {\n    return (\n      <Button className=\"trashButton btn\" onClick={this.handleDeleteBook}>\n        <span className=\"fas fa-trash-alt\" />\n      </Button>\n    )\n  }\n}\n\nexport default TrashButton\n","import React, { Component } from 'react'\nimport TrashButton from './TrashButton'\nimport './Book.css'\nimport { NavLink } from 'react-router-dom'\nimport { Row, Container, Button, Form, Col } from 'react-bootstrap'\n\nclass Book extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      bookId: this.props.bookId,\n      updateClicked: false,\n      saveClicked: false,\n      newTitle: this.props.title,\n      newAuthor: this.props.author,\n    }\n    this.handleTitleChange = this.handleTitleChange.bind(this)\n    this.handleAuthorChange = this.handleAuthorChange.bind(this)\n    this.handleUpdateBook = this.handleUpdateBook.bind(this)\n    this.handleSaveUpdate = this.handleSaveUpdate.bind(this)\n    this.handleCancel = this.handleCancel.bind(this)\n  }\n\n  handleTitleChange(event) {\n    this.setState({ newTitle: event.target.value })\n  }\n\n  handleAuthorChange(event) {\n    this.setState({ newAuthor: event.target.value })\n  }\n\n  handleUpdateBook(event) {\n    event.preventDefault()\n    this.setState({ updateClicked: true })\n  }\n\n  handleCancel(event) {\n    event.preventDefault()\n    this.setState({ updateClicked: false })\n  }\n\n  handleSaveUpdate(event) {\n    event.preventDefault()\n    fetch('/update-book', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.bookId,\n        newTitle: this.state.newTitle,\n        newAuthor: this.state.newAuthor,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.props.onBookUpdate(\n          this.props.bookId,\n          data.id,\n          this.state.newTitle,\n          this.state.newAuthor\n        )\n        this.setState({ updateClicked: false })\n      })\n      .catch(error => console.error(error))\n  }\n\n  render() {\n    if (this.state.updateClicked) {\n      return (\n        <Container>\n          <div className=\"updateForm\">\n            <Form onSubmit={this.onBookUpdate}>\n              <Row>\n                <Col>\n                  <Form.Group controlId=\"newTitle\">\n                    <Form.Label />\n                    <Form.Control\n                      type=\"text\"\n                      value={this.state.newTitle}\n                      onChange={this.handleTitleChange}\n                    />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group>\n                    <Form.Label />\n                    <Form.Control\n                      type=\"text\"\n                      value={this.state.newAuthor}\n                      onChange={this.handleAuthorChange}\n                    />\n                  </Form.Group>\n                </Col>\n              </Row>\n            </Form>\n            <Row>\n              <Col sm={9} />\n              <Col sme={3}>\n                <Button className=\"updateFormBtn\" onClick={this.handleCancel}>\n                  <i className=\"fas fa-arrow-left\" />\n                </Button>\n                <Button\n                  className=\"updateFormBtn\"\n                  onClick={this.handleSaveUpdate}\n                >\n                  <i class=\"fab fa-telegram-plane\" />\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      )\n    } else {\n      return (\n        <Container>\n          <Row>\n            <TrashButton\n              bookId={this.props.bookId}\n              onBookDelete={this.props.onBookDelete}\n            />\n            <Button className=\"updateButton\" onClick={this.handleUpdateBook}>\n              <i className=\"fas fa-pencil-alt\" />\n            </Button>\n            <NavLink to={`user/${this.props.userId}/book/${this.props.bookId}`}>\n              {this.props.title} - {this.props.author}\n            </NavLink>\n          </Row>\n        </Container>\n      )\n    }\n  }\n}\n\nexport default Book\n","import React from 'react'\nimport AddBook from './AddBook'\nimport Book from './Book'\nimport { Col, Row, Container } from 'react-bootstrap'\n\nclass BookList extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userId: '',\n      books: [],\n    }\n    this.getUserId = this.getUserId.bind(this)\n    this.getBooks = this.getBooks.bind(this)\n    this.onBookDelete = this.onBookDelete.bind(this)\n    this.onBookAdd = this.onBookAdd.bind(this)\n    this.onBookUpdate = this.onBookUpdate.bind(this)\n  }\n\n  onBookDelete(bookId) {\n    const updatedBooks = this.state.books.filter(book => {\n      return book.id !== bookId\n    })\n    this.setState({ books: updatedBooks })\n  }\n\n  onBookAdd(title, author, bookId) {\n    const newBooks = this.state.books\n    newBooks.push({ title: title, author: author, id: bookId })\n    this.setState({ books: newBooks })\n  }\n\n  onBookUpdate(oldBookId, newBookId, newTitle, newAuthor) {\n    // Object.assign({}, this.state.books)\n    const updatedBooks = this.state.books.filter(book => {\n      return book.id !== oldBookId\n    })\n    updatedBooks.push({ title: newTitle, author: newAuthor, id: newBookId })\n    this.setState({ books: updatedBooks })\n  }\n\n  getUserId() {\n    fetch('/get-userid', {\n      method: 'GET',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ userId: data })\n      })\n      .catch(error => console.error(error))\n  }\n\n  getBooks() {\n    fetch('/get-your-books', {\n      method: 'GET',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ books: data })\n      })\n      .catch(error => console.error(error))\n  }\n  componentDidMount() {\n    this.getBooks()\n    this.getUserId()\n  }\n\n  render() {\n    return (\n      <Container className=\"BookList\">\n        <Row>\n          <Col sm={8}>\n            <h2>Your Shelf</h2>\n            {this.state.books.map(book => {\n              return (\n                <Book\n                  key={book.id}\n                  title={book.title}\n                  author={book.author}\n                  bookId={book.id}\n                  userId={this.state.userId}\n                  onBookDelete={this.onBookDelete}\n                  onBookUpdate={this.onBookUpdate}\n                />\n              )\n            })}\n          </Col>\n          <Col sm={4}>\n            <AddBook onBookAdd={this.onBookAdd} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default BookList\n","import React, { Component } from 'react'\nimport moment from 'moment/moment'\nimport { NavLink } from 'react-router-dom'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport './Base.css'\n\nclass BookInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: '',\n      name: '',\n      genres: [],\n      startDate: 'No date given',\n      endDate: 'No date given',\n      authorized: false,\n      readers: [],\n    }\n    this.getAuthorization = this.getAuthorization.bind(this)\n    this.getTitle = this.getTitle.bind(this)\n    this.getName = this.getName.bind(this)\n    this.getBookGenres = this.getBookGenres.bind(this)\n    this.getStartDate = this.getStartDate.bind(this)\n    this.getEndDate = this.getEndDate.bind(this)\n    this.getReaders = this.getReaders.bind(this)\n  }\n  getTitle() {\n    fetch('/get-title', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.bookId,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ title: data })\n      })\n      .catch(error => console.error(error))\n  }\n\n  getAuthorization() {\n    fetch('/get-authorization', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.id,\n      }),\n    })\n      .then(response => {\n        if (response.status === 200) {\n          console.log('authorized')\n          this.setState({ authorized: true })\n          return response.json()\n        }\n      })\n      .then(data => {\n        console.log(data)\n      })\n      .catch(error => console.error(error))\n  }\n\n  getName() {\n    fetch('/get-name', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.id,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ name: data })\n      })\n      .catch(error => console.error(error))\n  }\n\n  getBookGenres() {\n    fetch('/get-bookgenres', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.bookId,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ genres: data })\n      })\n      .catch(error => console.error(error))\n  }\n  getStartDate() {\n    fetch('/get-start-date', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.id,\n        book_id: this.props.match.params.bookId,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        if (data != null) {\n          data = moment(data).format('MMMM Do gggg')\n          this.setState({ startDate: data })\n        }\n      })\n      .catch(error => console.error(error))\n  }\n  getEndDate() {\n    fetch('/get-end-date', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.id,\n        book_id: this.props.match.params.bookId,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        if (data != null) {\n          data = moment(data).format('MMMM Do gggg')\n          this.setState({ startDate: data })\n        }\n      })\n      .catch(error => console.error(error))\n  }\n\n  getReaders() {\n    fetch('/get-readers', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.id,\n        book_id: this.props.match.params.bookId,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        if (data != null) {\n          this.setState({ readers: data })\n        } else {\n          this.setState({ readers: ['No other readers'] })\n        }\n      })\n  }\n\n  componentDidMount() {\n    this.getAuthorization()\n    this.getBookGenres()\n    this.getTitle()\n    this.getName()\n    this.getStartDate()\n    this.getEndDate()\n    this.getReaders()\n  }\n  render() {\n    console.log('######### lol', this.state)\n\n    return (\n      <Container>\n        <div className=\"bookInfo\">\n          <br />\n          <h2>{this.state.title}</h2>\n          <br />\n          <Row className=\"bookCols\">\n            <Col lg={6}>\n              <Row>\n                <h3>You started this book on: </h3>\n              </Row>\n              <Row>{this.state.startDate}</Row>\n              <Row>\n                <h3>You finished this book on:</h3>\n              </Row>\n              <Row>{this.state.endDate}</Row>\n            </Col>\n            <Col lg={6}>\n              <Row>\n                <h3>Genres</h3>\n              </Row>\n              {(this.state.genres || []).map(genre => {\n                return (\n                  <Row>\n                    <div key={genre.genre}>{genre.genre}</div>\n                  </Row>\n                )\n              })}\n              <Row>\n                <h3>Other Readers</h3>\n              </Row>\n              {this.state.readers.map(reader => {\n                return (\n                  <div key={reader.id}>\n                    <Row>\n                      <NavLink\n                        to={`/user/${reader.id}/book/${\n                          this.props.match.params.bookId\n                        }`}\n                      >\n                        {reader.name}\n                      </NavLink>\n                    </Row>\n                  </div>\n                )\n              })}\n            </Col>\n          </Row>\n          <br />\n          {this.state.authorized && (\n            <div>\n              <h3> Want to add more info?</h3>\n              <NavLink\n                to={`/user/${this.props.match.params.id}/book/${\n                  this.props.match.params.bookId\n                }/update`}\n              >\n                <Button className=\"btnSignIn\" sz=\"lg\">\n                  Click here\n                </Button>\n              </NavLink>\n              <br />\n            </div>\n          )}\n          <br />\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default BookInfo\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router'\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoggedIn: this.props.isLoggedIn,\n      email: '',\n      password: '',\n    }\n    this.handleEmailChange = this.handleEmailChange.bind(this)\n    this.handlePasswordChange = this.handlePasswordChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleEmailChange(event) {\n    this.setState({ email: event.target.value })\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    fetch('/login', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    })\n      .then(response => {\n        if (response.status === 202) {\n          console.log('SUCCESSS')\n          this.props.onLogin()\n          return response.json()\n        } else if (response.status === 401) {\n          console.log('uh-oh')\n        }\n      })\n      .then(data => {\n        console.log(data)\n      })\n      .catch(error => console.error(error))\n  }\n  render() {\n    if (this.props.isLoggedIn) {\n      return <Redirect push to=\"/books\" />\n    } else {\n      return (\n        <Container className=\"RegistrationLogin\">\n          <br />\n          <h2>Login</h2>\n          <Form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col>\n                <Form.Group controlId=\"forEmail\">\n                  <Form.Label>Email:</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    value={this.state.email}\n                    required\n                    onChange={this.handleEmailChange}\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"password\">\n                  <Form.Label>Password:</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    value={this.state.password}\n                    required\n                    onChange={this.handlePasswordChange}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <br />\n            <Button className=\"btnSignIn\" type=\"submit\" size=\"lg\" block>\n              Sign In\n            </Button>\n            <br />\n          </Form>\n        </Container>\n      )\n    }\n  }\n}\nexport default Login\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router'\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoggedIn: this.props.isLoggedIn,\n      fname: '',\n      lname: '',\n      email: '',\n      password: '',\n    }\n    this.handleFnameChange = this.handleFnameChange.bind(this)\n    this.handleLnameChange = this.handleLnameChange.bind(this)\n    this.handleEmailChange = this.handleEmailChange.bind(this)\n    this.handlePasswordChange = this.handlePasswordChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleFnameChange(event) {\n    this.setState({ fname: event.target.value })\n  }\n\n  handleLnameChange(event) {\n    this.setState({ lname: event.target.value })\n  }\n\n  handleEmailChange(event) {\n    this.setState({ email: event.target.value })\n  }\n\n  handlePasswordChange(event) {\n    this.setState({ password: event.target.value })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    fetch('/register', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        fname: this.state.fname,\n        lname: this.state.lname,\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.props.onLogin()\n      })\n      .catch(error => console.error(error))\n  }\n  render() {\n    if (this.props.isLoggedIn) {\n      return <Redirect push to=\"/books\" />\n    } else {\n      return (\n        <Container className=\"RegistrationLogin\">\n          <br />\n          <h2>Register</h2>\n          <Form onSubmit={this.handleSubmit}>\n            <Row>\n              <Col>\n                <Form.Group controlId=\"formFname\">\n                  <Form.Label>First Name:</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={this.state.fname}\n                    required\n                    onChange={this.handleFnameChange}\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formLname\">\n                  <Form.Label>Last Name:</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={this.state.lname}\n                    required\n                    onChange={this.handleLnameChange}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group controlId=\"forEmail\">\n                  <Form.Label>Email:</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    value={this.state.email}\n                    required\n                    onChange={this.handleEmailChange}\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"password\">\n                  <Form.Label>Password:</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    value={this.state.password}\n                    required\n                    onChange={this.handlePasswordChange}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <br />\n            <Button className=\"btnSignIn\" type=\"submit\" size=\"lg\" block>\n              Sign Up\n            </Button>\n            <br />\n          </Form>\n        </Container>\n      )\n    }\n  }\n}\nexport default Register\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\n\nclass User extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: [],\n    }\n  }\n  render() {\n    return (\n      <NavLink to={`/user/${this.props.userId}/books`}>\n        <Button className=\"userBtn\" block>\n          {this.props.name}\n        </Button>\n      </NavLink>\n    )\n  }\n}\n\nexport default User\n","import React, { Component } from 'react'\nimport User from './User'\nimport { Container, Col } from 'react-bootstrap'\nimport './Base.css'\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: [],\n    }\n    this.getUsers = this.getUsers.bind(this)\n  }\n  getUsers() {\n    fetch('/get-users', {\n      method: 'GET',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ users: data })\n      })\n      .catch(error => console.error(error))\n  }\n  componentDidMount() {\n    this.getUsers()\n  }\n\n  render() {\n    return (\n      <Container className=\"userList\">\n        <h2>Users</h2>\n        <Col>\n          {this.state.users.map(user => {\n            return <User key={user.id} name={user.name} userId={user.id} />\n          })}\n          <br />\n        </Col>\n      </Container>\n    )\n  }\n}\nexport default UserList\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Container, Row } from 'react-bootstrap'\n\nclass UserBooks extends Component {\n  constructor(props) {\n    super(props)\n    console.log(this.props.match.params.id)\n    console.log(\n      JSON.stringify({\n        id: this.props.match.params.id,\n      })\n    )\n\n    this.state = {\n      books: [],\n      name: '',\n    }\n    this.getBooks = this.getBooks.bind(this)\n    this.getName = this.getName.bind(this)\n  }\n\n  getName() {\n    fetch('/get-name', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.id,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ name: data })\n      })\n      .catch(error => console.error(error))\n  }\n  getBooks() {\n    fetch('/get-user-books', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.id,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ books: data })\n      })\n      .catch(error => console.error(error))\n  }\n  componentDidMount() {\n    this.getBooks()\n    this.getName()\n  }\n\n  render() {\n    return (\n      <Container>\n        <div className=\"userBooks\">\n          <h2 className=\"userShelf\">{this.state.name}'s Shelf</h2>\n          <div>\n            {this.state.books.map(book => {\n              return (\n                <Row key={book.id}>\n                  <i className=\"fas fa-book\" />\n                  <NavLink\n                    to={`/user/${this.props.match.params.id}/book/${book.id}`}\n                  >\n                    {book.title} - {book.author}\n                  </NavLink>\n                </Row>\n              )\n            })}\n            <br />\n          </div>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default UserBooks\n","import React, { Component } from 'react'\nimport FilteredMultiSelect from 'react-filtered-multiselect'\nimport { Col, Row, Container, Form, Button } from 'react-bootstrap'\nimport './BookForm.css'\n\nclass BookForms extends Component {\n  constructor(props) {\n    super(props)\n    console.log(this.props.match.params.bookId)\n    this.state = {\n      genres: [],\n      selectedGenres: [],\n      startDate: '',\n      endDate: '',\n      title: '',\n    }\n    this.getGenres = this.getGenres.bind(this)\n    this.handleSelect = this.handleSelect.bind(this)\n    this.handleDeselect = this.handleDeselect.bind(this)\n    this.handleStartDateChange = this.handleStartDateChange.bind(this)\n    this.handleEndDateChange = this.handleEndDateChange.bind(this)\n    this.handleSubmitGenres = this.handleSubmitGenres.bind(this)\n    this.handleSubmitStartDate = this.handleSubmitStartDate.bind(this)\n    this.handleSubmitEndDate = this.handleSubmitEndDate.bind(this)\n    this.getTitle = this.getTitle.bind(this)\n  }\n  handleSelect(addGenres) {\n    const newSelectedGenres = this.state.selectedGenres.concat(addGenres)\n    this.setState({ selectedGenres: newSelectedGenres })\n  }\n\n  handleDeselect(deselectedGenres) {\n    // Object.assign({}, this.state.selectedGenres)\n    const genresSelected = this.state.selectedGenres.filter(genre => {\n      for (let i = 0; i < deselectedGenres.length; i++) {\n        if (deselectedGenres[i].text === genre.text) {\n          return false\n        }\n      }\n\n      return true\n    })\n    this.setState({ selectedGenres: genresSelected })\n  }\n\n  handleStartDateChange(event) {\n    this.setState({ startDate: event.target.value })\n  }\n\n  handleEndDateChange(event) {\n    this.setState({ endDate: event.target.value })\n  }\n\n  handleSubmitStartDate(event) {\n    event.preventDefault()\n    fetch('/book/set-start-date', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.bookId,\n        start: this.state.startDate,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n      })\n      .catch(error => console.error(error))\n  }\n\n  handleSubmitEndDate(event) {\n    event.preventDefault()\n    fetch('/book/set-end-date', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.bookId,\n        end: this.state.endDate,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n      })\n      .catch(error => console.error(error))\n  }\n\n  handleSubmitGenres(event) {\n    event.preventDefault()\n    fetch('/set-genres', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.bookId,\n        genres: this.state.selectedGenres,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n      })\n      .catch(error => console.error(error))\n  }\n\n  getGenres() {\n    fetch('/get-genres', {\n      method: 'GET',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ genres: data })\n      })\n      .catch(error => console.error(error))\n  }\n\n  getTitle() {\n    fetch('/get-title', {\n      method: 'POST',\n      mode: 'cors', // no-cors, cors, *same-origin\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: JSON.stringify({\n        id: this.props.match.params.bookId,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ title: data })\n      })\n      .catch(error => console.error(error))\n  }\n\n  componentDidMount() {\n    this.getGenres()\n    this.getTitle()\n  }\n\n  render() {\n    let availableGenres = this.state.genres.filter(genre => {\n      for (let i = 0; i < this.state.selectedGenres.length; i++) {\n        if (this.state.selectedGenres[i].text === genre.text) {\n          return false\n        }\n      }\n      return true\n    })\n\n    return (\n      <Container>\n        <div className=\"BookForm\">\n          <h2>Add info for {this.state.title}</h2>\n          <br />\n          <div className=\"forms\">\n            <Row>\n              <Form onSubmit={this.handleSubmitGenres}>\n                <Col>\n                  <Form.Label>Select Book Genre(s)</Form.Label>\n                  <Form.Group controlId=\"filteredMultiAdd\">\n                    <FilteredMultiSelect\n                      buttonText=\"Add\"\n                      showFilter={true}\n                      placeholder=\"type to filter\"\n                      size=\"6\"\n                      onChange={this.handleSelect}\n                      options={availableGenres}\n                      selectedOptions={this.selectedGenres}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"filteredMultiRemove\">\n                    <FilteredMultiSelect\n                      buttonText=\"Remove\"\n                      onChange={this.handleDeselect}\n                      options={this.state.selectedGenres}\n                      showFilter={false}\n                      size=\"6\"\n                    />\n                  </Form.Group>\n                </Col>\n                <Button className=\"multiSelectBtn\" type=\"submit\" size=\"lg\">\n                  Submit\n                </Button>\n                <br />\n              </Form>\n              <Col>\n                <Form onSubmit={this.handleSubmitStartDate}>\n                  <Row>\n                    <Form.Label>Start date:</Form.Label>\n                  </Row>\n                  <Row>\n                    <input\n                      type=\"date\"\n                      name=\"start\"\n                      value={this.state.startDate}\n                      onChange={this.handleStartDateChange}\n                    />\n                    <Button className=\"btnDate\" type=\"submit\">\n                      Submit\n                    </Button>\n                  </Row>\n                  <br />\n                </Form>\n                <Form onSubmit={this.handleSubmitEndDate}>\n                  <Row>\n                    <Form.Label>End date:</Form.Label>\n                  </Row>\n                  <Row>\n                    <input\n                      type=\"date\"\n                      name=\"end\"\n                      value={this.state.endDate}\n                      onChange={this.handleEndDateChange}\n                    />\n                    <Button className=\"btnDate\" type=\"submit\">\n                      Submit\n                    </Button>\n                  </Row>\n                </Form>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      </Container>\n    )\n  }\n}\nexport default BookForms\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n// import { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport './App.css'\nimport './Base.css'\nimport Home from './Home'\nimport BookList from './BookList'\nimport BookInfo from './BookInfo'\nimport Login from './Login'\nimport Register from './Register'\nimport UserList from './UserList'\nimport UserBooks from './UserBooks'\nimport BookForms from './BookForms'\n\n// Comment\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoggedIn: false,\n    }\n    this.onLogin = this.onLogin.bind(this)\n    this.onLogout = this.onLogout.bind(this)\n    this.renderLogin = this.renderLogin.bind(this)\n    this.renderRegister = this.renderRegister.bind(this)\n    this.renderHome = this.renderHome.bind(this)\n  }\n  onLogin() {\n    this.setState({ isLoggedIn: true })\n  }\n  onLogout() {\n    this.setState({ isLoggedIn: false })\n  }\n  renderLogin() {\n    return <Login onLogin={this.onLogin} isLoggedIn={this.state.isLoggedIn} />\n  }\n\n  renderRegister() {\n    return (\n      <Register onLogin={this.onLogin} isLoggedIn={this.state.isLoggedIn} />\n    )\n  }\n  renderHome() {\n    return <Home onLogout={this.onLogout} isLoggedIn={this.state.isLoggedIn} />\n  }\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"App container\">\n            <Route path=\"/\" component={this.renderHome} />\n            <Route path=\"/register\" component={this.renderRegister} />\n            <Route path=\"/login\" component={this.renderLogin} />\n            <Route path=\"/books\" component={BookList} />\n            <Route exact path=\"/user/:id/book/:bookId\" component={BookInfo} />\n            <Route path=\"/user/:id/book/:bookId/update\" component={BookForms} />\n            <Route path=\"/users\" component={UserList} />\n            <Route path=\"/user/:id/books\" component={UserBooks} />\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}